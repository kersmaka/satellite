---
- name: Automate Satellite Inventory Export to Git
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    git_user: ansible_admin
    git_home: "/home/ansible_admin"
    repo_path: "/home/ansible_admin/github/satellite"

  tasks:
    - name: Get url from environment
      ansible.builtin.set_fact:
        satellite_url: "{{ lookup('ansible.builtin.env', 'url') }}"
      no_log: true

    - name: Get username from environment
      ansible.builtin.set_fact:
        satellite_username: "{{ lookup('ansible.builtin.env', 'user') }}"
      no_log: true  

    - name: Get password from environment
      ansible.builtin.set_fact:
        satellite_password: "{{ lookup('ansible.builtin.env', 'password') }}"
      no_log: true

    - name: Retrieve host data from Satellite API
      ansible.builtin.uri:
        url: "{{ satellite_url }}"
        user: "{{ satellite_username }}"
        password: "{{ satellite_password }}"
        method: GET
        body_format: json
        validate_certs: false
        status_code: 200
        return_content: true
      register: satellite_data

    - name: Ensure ansible_admin user exists
      ansible.builtin.user:
        name: ansible_admin
        home: /home/ansible_admin
        create_home: true
        shell: /bin/bash  

    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: "{{ git_home }}/.ssh"
        state: directory
        owner: "{{ git_user }}"
        group: "{{ git_user }}"
        mode: '0700'

    - name: Add github.com to known_hosts
      ansible.builtin.known_hosts:
        name: github.com
        key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"
        path: "{{ git_home }}/.ssh/known_hosts"
        state: present
        hash_host: false

    - name: Debug current user
      ansible.builtin.command: whoami
      become: true
      become_method: su
      become_user: ansible_admin
      register: whoami_result

    - debug:
        var: whoami_result.stdout   

    - name: Debug environment for ansible_admin
      ansible.builtin.command: env
      become: true
      become_user: ansible_admin
      become_method: su
      register: env_output

    - debug:
      var: env_output.stdout_lines     

    - name: Clone or update Git repository
      ansible.builtin.git:
        repo: 'git@github.com:kersmaka/satellite.git'
        dest: "{{ repo_path }}"
        version: 'main'
        update: true
        clone: true
        force: false
        recursive: true
        accept_hostkey: true  # Only works for new keys
        key_file: "{{ git_home }}/.ssh/id_rsa"
        #ssh_opts: '-i {{ git_home }}/.ssh/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=no'
      become: true
      become_user: ansible_admin  
      become_method: su
      environment:
        HOME: "{{ git_home }}"
        USER: "{{ git_user }}"
        LOGNAME: "{{ git_user }}"

    - name: Create inventory.json file from Satellite data
      ansible.builtin.copy:
        content: "{{ satellite_data.content | to_json(indent=2) }}"
        dest: "{{ repo_path }}/inventory.json"
        owner: "{{ git_user }}"
        group: "{{ git_user }}"
        mode: '0644'

    - name: Commit and push updated inventory file
      ansible.builtin.shell: |
        git add inventory.json
        git commit -m "Automated Satellite inventory update: {{ ansible_date_time.iso8601 }}"
        git push
      args:
        chdir: "{{ repo_path }}"
      become: true
      become_user: "{{ git_user }}"
